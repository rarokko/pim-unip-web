{"ast":null,"code":"import _defineProperty from \"/home/rarokko/Documents/Projects/pim-unip-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rarokko/Documents/Projects/pim-unip-web/src/pages/DataList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Request from './Request';\nimport { Grid, Box, Input, Button, Typography, Tabs, Tab, TabPanel, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nexport default class DataList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: window.location.pathname.substring(1),\n      value: 0,\n      getData: [],\n      insertData: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getValues = this.getValues.bind(this);\n  }\n\n  getValues() {\n    Request.get(this.state.page).then(response => {\n      this.setState({\n        getData: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n      alert(\"Erro na requisição\");\n    });\n  }\n\n  insertValues() {\n    Request.post(this.state.page, this.state.insertData).then(response => {\n      alert(\"Dados inseridos com sucesso\");\n      this.getValues();\n    }).catch(err => {\n      console.log(err);\n      alert(\"Digite todos os campos corretamente\");\n    });\n  }\n\n  handleInputChange(e) {\n    let name = e.target.name;\n    let value = e.target.value;\n    this.setState(state => {\n      return {\n        insertData: _objectSpread({}, state.insertData, {\n          [name]: value\n        })\n      };\n    });\n    console.log(this.state.insertData);\n  }\n\n  handleChange(e, newValue) {\n    this.setState({\n      value: newValue\n    });\n  }\n\n  componentDidMount() {\n    this.getValues();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      value: this.state.value,\n      onChange: this.handleChange,\n      indicatorColor: \"primary\",\n      textColor: \"secondary\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      label: \"Consultar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      label: \"Incluir\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), this.state.value == 0 && this.state.getData.length > 0 && React.createElement(\"div\", {\n      style: {\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, Object.keys(this.state.getData[0]).map(key => {\n      return React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, Request.separateCamelCase(key));\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.getData.map((item, index) => React.createElement(TableRow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, Object.keys(item).map(key => {\n      return React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, item[key]);\n    })))))), this.state.value == 1 && this.state.getData.length > 0 && React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 2,\n      lg: 8,\n      md: 8,\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, Object.keys(this.state.getData[0]).map(key => {\n      return React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: key,\n        onChange: e => this.handleInputChange(e),\n        placeholder: Request.separateCamelCase(key),\n        value: this.state.insertData.key,\n        required: true,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.insertValues(),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"INSERIR\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/rarokko/Documents/Projects/pim-unip-web/src/pages/DataList.jsx"],"names":["React","Component","Request","Grid","Box","Input","Button","Typography","Tabs","Tab","TabPanel","Table","TableHead","TableRow","TableCell","TableBody","BrowserRouter","Router","Switch","Route","Link","DataList","constructor","state","page","window","location","pathname","substring","value","getData","insertData","handleChange","bind","getValues","get","then","response","setState","data","catch","err","console","log","alert","insertValues","post","handleInputChange","e","name","target","newValue","componentDidMount","render","length","overflow","Object","keys","map","key","separateCamelCase","item","index","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Request from './Request';\nimport { Grid, Box, Input, Button, Typography, Tabs, Tab, TabPanel, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nexport default class DataList extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            page: window.location.pathname.substring(1),\n            value: 0,\n            getData: [],\n            insertData: {}\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.getValues = this.getValues.bind(this);\n    }\n\n    getValues() {\n        Request.get(this.state.page)\n        .then((response) => {\n            this.setState({ getData: response.data })\n        })\n        .catch((err) => {\n            console.log(err);\n            alert(\"Erro na requisição\");\n        })\n    }\n\n    insertValues() {\n        Request.post(this.state.page, this.state.insertData)\n        .then((response) => {\n            alert(\"Dados inseridos com sucesso\");\n            this.getValues();\n        })\n        .catch((err) => {\n            console.log(err);\n            alert(\"Digite todos os campos corretamente\");\n        })\n    }\n\n    handleInputChange(e) {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState((state) => {\n            return {\n                insertData: {\n                    ...state.insertData,\n                    [name]: value\n                }\n            }\n        });\n\n        console.log(this.state.insertData);\n    }\n\n    handleChange(e, newValue) {\n        this.setState({ value: newValue });\n    }\n\n    componentDidMount() {\n        this.getValues();\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Tabs\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"secondary\"\n                    centered\n                >\n                    <Tab label=\"Consultar\" />\n                    <Tab label=\"Incluir\" />\n                </Tabs>\n\n                {this.state.value == 0 && this.state.getData.length > 0 &&\n                    <div style={{ overflow: \"auto\" }}> \n                        <Table>\n                            <TableHead>\n                            <TableRow>\n                                {Object.keys(this.state.getData[0]).map((key) => {\n                                    return <TableCell>{Request.separateCamelCase(key)}</TableCell>\n                                })}\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.getData.map((item, index) => (\n                                <TableRow key={index}>\n                                    {Object.keys(item).map((key) => {\n                                        return <TableCell>{item[key]}</TableCell>\n                                    })}\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                }\n\n\n                {this.state.value == 1 && this.state.getData.length > 0 &&\n                    <Grid\n                    container \n                    justify=\"center\"\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    spacing={2}\n                    style={{ marginTop: 20 }}\n                    >\n                        <Grid \n                            container \n                            justify=\"center\"\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={2}\n                            lg={8}\n                            md={8}\n                            sm={8}\n                        >\n                            {Object.keys(this.state.getData[0]).map((key) => {\n                                return (\n                                    <Grid item>\n                                        <Input\n                                            name={key}\n                                            onChange={(e) => this.handleInputChange(e)}\n                                            placeholder={Request.separateCamelCase(key)}\n                                            value={this.state.insertData.key}\n                                            required={true}\n                                            type=\"text\"\n                                        />\n                                    </Grid>\n                                )\n                            })}\n                        </Grid>\n                        <Grid item>\n                            <Button onClick={() => this.insertValues()} color={\"primary\"}>\n                                INSERIR\n                            </Button>\n                        </Grid>\n                    </Grid>\n                }\n\n            </div>\n        );\n\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}