{"ast":null,"code":"import axios from 'axios';\nconst IP_ADDRESS = 'http://192.168.1.115:8080/api';\nconst VERSION = '/v1/';\nexport default class Request {\n  static get(path) {\n    return axios.get(IP_ADDRESS + VERSION + path, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  static post(path, body) {\n    return axios.post(IP_ADDRESS + VERSION + path, body);\n  }\n\n  static separateCamelCase(str) {\n    let temp = str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1 ');\n    temp = temp.substring(0, 1).toUpperCase() + temp.substring(1);\n    return temp;\n  }\n\n}","map":{"version":3,"sources":["/home/rarokko/Documents/Projects/pim-unip-web/src/pages/Request.jsx"],"names":["axios","IP_ADDRESS","VERSION","Request","get","path","headers","post","body","separateCamelCase","str","temp","replace","substring","toUpperCase"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAG,+BAAnB;AACA,MAAMC,OAAO,GAAG,MAAhB;AAEA,eAAe,MAAMC,OAAN,CAAc;AAEzB,SAAOC,GAAP,CAAWC,IAAX,EAAiB;AACb,WAAOL,KAAK,CAACI,GAAN,CAAUH,UAAU,GAAGC,OAAb,GAAuBG,IAAjC,EAAuC;AAC1CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADiC,KAAvC,CAAP;AAKH;;AAED,SAAOC,IAAP,CAAYF,IAAZ,EAAkBG,IAAlB,EAAwB;AACpB,WAAOR,KAAK,CAACO,IAAN,CAAWN,UAAU,GAAGC,OAAb,GAAuBG,IAAlC,EAAwCG,IAAxC,CAAP;AACH;;AAED,SAAOC,iBAAP,CAAyBC,GAAzB,EAA8B;AAE1B,QAAIC,IAAI,GAAGD,GAAG,CAACE,OAAJ,CAAY,sBAAZ,EAAoC,KAApC,CAAX;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,KAAqCH,IAAI,CAACE,SAAL,CAAe,CAAf,CAA5C;AACA,WAAOF,IAAP;AAEH;;AApBwB","sourcesContent":["import axios from 'axios';\n\nconst IP_ADDRESS = 'http://192.168.1.115:8080/api';\nconst VERSION = '/v1/';\n\nexport default class Request {\n\n    static get(path) {\n        return axios.get(IP_ADDRESS + VERSION + path, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    static post(path, body) {\n        return axios.post(IP_ADDRESS + VERSION + path, body);\n    }\n\n    static separateCamelCase(str) {\n\n        let temp = str.replace(/([a-zA-Z])(?=[A-Z])/g, '$1 ')\n        temp = temp.substring(0, 1).toUpperCase() + temp.substring(1);\n        return temp;\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}